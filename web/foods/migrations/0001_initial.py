# Generated by Django 3.0.7 on 2020-06-26 07:42

import datetime
from django.db import migrations, models
import django.db.models.deletion
import foods.aggregators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('notes', models.TextField(blank=True)),
            ],
            bases=(models.Model, foods.aggregators.WithAggregatedProperties),
        ),
        migrations.CreateModel(
            name='FoodCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            bases=(models.Model, foods.aggregators.WithAggregatedProperties),
        ),
        migrations.CreateModel(
            name='FoodServing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('serving_name', models.CharField(blank=True, max_length=255)),
                ('calories', models.FloatField()),
                ('fat', models.FloatField()),
                ('cholesterol', models.FloatField(default=0)),
                ('sodium', models.FloatField()),
                ('carbs', models.FloatField()),
                ('fibre', models.FloatField()),
                ('sugar', models.FloatField()),
                ('protein', models.FloatField()),
                ('price', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('food_combos', models.ManyToManyField(to='foods.FoodCombo')),
            ],
            bases=(models.Model, foods.aggregators.WithAggregatedProperties),
        ),
        migrations.CreateModel(
            name='FoodComboHasServing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=1)),
                ('food_combo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.FoodCombo')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.FoodServing')),
            ],
        ),
        migrations.AddField(
            model_name='foodcombo',
            name='foods',
            field=models.ManyToManyField(through='foods.FoodComboHasServing', to='foods.FoodServing'),
        ),
        migrations.CreateModel(
            name='DayHasMeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=1)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.Day')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.Meal')),
            ],
        ),
        migrations.CreateModel(
            name='DayHasFoodServing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=1)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.Day')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.FoodServing')),
            ],
        ),
        migrations.CreateModel(
            name='DayHasFoodCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=1)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.Day')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.FoodCombo')),
            ],
        ),
        migrations.AddField(
            model_name='day',
            name='food_combos',
            field=models.ManyToManyField(blank=True, through='foods.DayHasFoodCombo', to='foods.FoodCombo'),
        ),
        migrations.AddField(
            model_name='day',
            name='food_servings',
            field=models.ManyToManyField(blank=True, through='foods.DayHasFoodServing', to='foods.FoodServing'),
        ),
        migrations.AddField(
            model_name='day',
            name='meals',
            field=models.ManyToManyField(blank=True, through='foods.DayHasMeal', to='foods.Meal'),
        ),
    ]
